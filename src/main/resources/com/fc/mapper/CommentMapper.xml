<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.fc.mapper.CommentMapper">

    <resultMap type="com.fc.model.User" id="userMap">
        <id column="userId" property="userId"/>
        <result column="username" property="username"/>
        <result column="head_url" property="headUrl"/>
    </resultMap>

    <resultMap type="com.fc.model.Comment" id="commentMap">
        <id column="commentId" property="commentId"/>
        <result column="content" property="content"/>
        <result column="comment_time" property="commentTime"/>
        <result column="isPublish" property="isPublish"/>
        <association property="user" javaType="com.fc.model.User" resultMap="userMap" />
    </resultMap>

    <resultMap type="com.fc.model.Comment" id="commentById">
        <id column="replyId" property="replyId"/>
        <result column="content" property="content"/>
        <result column="comment_time" property="commentTime"/>
        <result column="isPublish" property="isPublish"/>
        <association property="user" javaType="com.fc.model.User" resultMap="userMap"/>
    </resultMap>


    <insert id="insertComment">
        <selectKey resultType="int" order="AFTER" keyProperty="commentId">
            select last_insert_id() as commentId
        </selectKey>
        insert into comment(content,userId,postId,comment_time) values(#{content},#{user.userId},#{post.postId},#{commentTime})
    </insert>

    <select id="listComment" resultMap="commentMap">
        select c.commentId,c.content,c.comment_time,c.isPublish,u.userId,u.username,u.head_url from comment c join user u on c.userId=u.userId
        where postId=#{postId}
    </select>

    <select id="getContentByCommentId" resultType="String">
        select content from reply where commentId=#{commentId}
    </select>

    <select id="getCommentById" resultMap="commentById">
        select *
        from comment c
        where c.commentId = #{commentId}
    </select>

    <delete id="deleteComment">
        delete from comment
        where commentId = #{commentId}
    </delete>

    <select id="selectNoOfComment" resultType="double">
        select count(*) from comment where comment_time between #{fromDate} and #{toDate}
    </select>

</mapper>
